"use strict";define("registration",["commonAngular"],function(angular){return angular.module("registration",["ngResource","ngAnimate"]),angular.module("registration").component("registration",{templateUrl:"./js/registration/registration.template.html",controller:["$resource",function($resource){var User=$resource("./user/:_id"),self=this;self.name="",self.password="",self.passwordConfirmation="",self.saved=!1,self.isOpen=!1,self.isLegalName=!0,self.isLegalPassword=!0,self.isConfirmed=!0,self.registerToggle=function(){self.isOpen=!self.isOpen,self.statusClass=self.isOpen?"isActive":""},self.verifyName=function(){var regex=/^[a-zA-Z]{6,}$/;self.isLegalName=regex.test(self.name)},self.verifyPassword=function(){var regex=/^(?!([a-zA-Z]+|\d+)$)[\S]{8,}$/;self.isLegalPassword=regex.test(self.password)},self.verifyConfirmPassword=function(){self.isConfirmed=self.password==self.passwordConfirmation},self.saveUser=function(){if(self.isLegalName&&self.isConfirmed&&self.isLegalPassword&&""!=self.password){var user={name:self.name,password:self.password};User.save(null,user).$promise.then(function(rs){self.saved=!0})}}}]}),angular}),define("settings",["commonAngular"],function(angular){angular.module("settings",["ngResource","ngAnimate"]);var userId=USER_ID||"";return angular.module("settings").constant("USER_ID",userId),angular.module("settings").directive("myValidation",function(){return{link:function(scope,iElement,iAttrs,controller){var floatRegex=/^\d?\.?\d+$/,passwordRegex=/^(?!([a-zA-Z]+|\d+)$)[\S]{8,}$/,type=(iAttrs.targetId,iAttrs.targetType);scope.isLegal=!0,scope.$watch("targetValue",function(value,oldValue){switch(type){case"float":scope.isLegal=floatRegex.test(value);break;case"password":scope.isLegal=""==value||passwordRegex.test(value);break;case"password-confirm":scope.isLegal=""==value||value==scope.comparingValue}scope.onValidate({targetName:scope.targetName,targetValue:scope.targetValue,isLegal:scope.isLegal})})},controller:function($scope,$element,$attrs,$transclude){},scope:{targetName:"@",targetType:"@",targetValue:"@",comparingValue:"@?",onValidate:"&"},transclude:!0,templateUrl:"./js/settings/validation.template.html"}}),angular.module("settings").service("userService",function($resource){var User=$resource("./user/:_id");this.findUser=function(id){return User.get({_id:id}).$promise},this.saveUser=function(user){User.save(user)}}),angular.module("settings").component("tagmgr",{templateUrl:"./js/settings/tagmgr.template.html",controller:["$scope",function($scope){var self=this;self.newTag="",self.addTag=function(){""!=self.newTag&&(Array.isArray(self.tags)?self.tags.unshift(self.newTag):self.tags=[self.newTag]),self.newTag="",self.onUpdate({tags:self.tags})},self.removeTag=function(tag){var removeIndex=self.tags.indexOf(tag);removeIndex>=0&&self.tags.splice(removeIndex,1),self.onUpdate({tags:self.tags})}}],bindings:{tags:"<tags",onUpdate:"&"},transclude:!0}),angular.module("settings").component("settings",{templateUrl:"./js/settings/settings.template.html",controller:["$scope","userService","USER_ID",function($scope,userService,id){var self=this;self.passwordConfirmation="",self.myClasses="";var verifiedRS={};self.validate=function(name,value,isLegal){verifiedRS[name]=isLegal},userService.findUser(id).then(function(user){self.user=user,self.user.password="",self.user.tags=self.user.tags?self.user.tags:[]}),self.saveUser=function(){var isReady=!0;for(var prop in verifiedRS)if(!verifiedRS[prop]){isReady=!1;break}return isReady&&(self.myClasses="isActive",self.user.$save().then(function(rs){self.myClasses="isSuccess",$.fn.tag.setTags(self.user.tags),setTimeout(function(){$scope.$apply(function(){self.myClasses=""})},900)})),!1}}]}),angular}),define("angularApp",["require","registration","settings"],function(require){require("registration");return require("settings")});