"use strict";angular.module("settings",["ngResource","ngAnimate"]);var USER_ID=USER_ID||"";angular.module("settings").constant("USER_ID",USER_ID),angular.module("settings").directive("myValidation",function(){return{link:function(scope,iElement,iAttrs,controller){var floatRegex=/^\d?\.?\d+$/,passwordRegex=/^(?!([a-zA-Z]+|\d+)$)[\S]{8,}$/,type=(iAttrs.targetId,iAttrs.targetType);scope.isLegal=!0,scope.$watch("targetValue",function(value,oldValue){switch(type){case"float":scope.isLegal=floatRegex.test(value);break;case"password":scope.isLegal=""==value||passwordRegex.test(value);break;case"password-confirm":scope.isLegal=""==value||value==scope.comparingValue}scope.onValidate({targetName:scope.targetName,targetValue:scope.targetValue,isLegal:scope.isLegal})})},controller:function($scope,$element,$attrs,$transclude){},scope:{targetName:"@",targetType:"@",targetValue:"@",comparingValue:"@?",onValidate:"&"},transclude:!0,templateUrl:"/js/settings/validation.template.html"}}),angular.module("settings").service("userService",function($resource){this.findUser=function(id){var User=$resource("/user/:_id"),user=User.get({_id:id});return user.$promise}}),angular.module("settings").component("settings",{templateUrl:"/js/settings/settings.template.html",controller:["$scope","userService","USER_ID",function($scope,userService,id){var self=this;self.passwordConfirmation="",self.myClasses="";var verifiedRS={};self.validate=function(name,value,isLegal){verifiedRS[name]=isLegal},userService.findUser(id).then(function(user){self.user=user,self.user.password=""}),self.saveUser=function(){var isReady=!0;for(var prop in verifiedRS)if(!verifiedRS[prop]){isReady=!1;break}return isReady&&(self.myClasses="isActive",self.user.$save().then(function(rs){self.myClasses="isSuccess",setTimeout(function(){$scope.$apply(function(){self.myClasses=""})},900)})),!1}}]});
//# sourceMappingURL=settings.min.js.map
