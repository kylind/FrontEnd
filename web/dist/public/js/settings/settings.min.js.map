{"version":3,"sources":["public/js/settings/settings.module.js","public/js/settings/settings.component.js"],"names":["angular","module","USER_ID","constant","directive","link","scope","iElement","iAttrs","controller","floatRegex","passwordRegex","type","targetId","targetType","isLegal","$watch","value","oldValue","test","comparingValue","onValidate","targetName","targetValue","$scope","$element","$attrs","$transclude","transclude","templateUrl","service","$resource","this","findUser","id","User","user","get","_id","$promise","component","userService","self","passwordConfirmation","myClasses","verifiedRS","validate","name","then","password","saveUser","isReady","prop","$save","rs","setTimeout","$apply"],"mappings":"YAAAA,SAAQC,OAAO,YAAa,aAAa,aAEzC,IAAIC,SAAUA,SAAW,EAEzBF,SAAQC,OAAO,YAAYE,SAAS,UAAWD,SCJ/CF,QAAQC,OAAO,YAAYG,UAAU,eAAgB,WAEjD,OAEIC,KAAM,SAASC,MAAOC,SAAUC,OAAQC,YACpC,GAAIC,YAAa,cACbC,cAAgB,iCAGhBC,MADSJ,OAAOK,SACTL,OAAOM,WAElBR,OAAMS,SAAU,EAEhBT,MAAMU,OAAO,cAAe,SAASC,MAAOC,UAExC,OAAQN,MAEJ,IAAK,QACDN,MAAMS,QAAUL,WAAWS,KAAKF,MAChC,MACJ,KAAK,WACDX,MAAMS,QAAmB,IAATE,OAAqBN,cAAcQ,KAAKF,MACxD,MACJ,KAAK,mBACDX,MAAMS,QAAmB,IAATE,OAAqBA,OAASX,MAAMc,eAK5Dd,MAAMe,YAAYC,WAAYhB,MAAMgB,WAAYC,YAAYjB,MAAMiB,YAAYR,QAAQT,MAAMS,aAOpGN,WAAY,SAASe,OAAQC,SAAUC,OAAQC,eAI/CrB,OACIgB,WAAW,IACXR,WAAY,IACZS,YAAa,IACbH,eAAgB,KAChBC,WAAW,KAEfO,YAAY,EACZC,YAAa,2CAIrB7B,QAAQC,OAAO,YAAY6B,QAAQ,cAAe,SAASC,WACvDC,KAAKC,SAAW,SAASC,IACrB,GAAIC,MAAOJ,UAAU,mCACjBK,KAAOD,KAAKE,KAAMC,IAAKJ,IAC3B,OAAOE,MAAKG,YAMpBvC,QAAQC,OAAO,YAAYuC,UAAU,YACjCX,YAAa,sCACbpB,YAAa,SAAU,cAAe,UAAW,SAASe,OAAQiB,YAAaP,IAC3E,GAAIQ,MAAOV,IAGXU,MAAKC,qBAAuB,GAE5BD,KAAKE,UAAY,EAEjB,IAAIC,cACJH,MAAKI,SAAS,SAASC,KAAM9B,MAAOF,SAEhC8B,WAAWE,MAAMhC,SAIrB0B,YAAYR,SAASC,IAAIc,KAAK,SAASZ,MACnCM,KAAKN,KAAOA,KACZM,KAAKN,KAAKa,SAAW,KAIzBP,KAAKQ,SAAW,WAEZ,GAAIC,UAAS,CAEb,KAAI,GAAIC,QAAQP,YACZ,IAAIA,WAAWO,MAAM,CACjBD,SAAQ,CACR,OAuBR,MAnBGA,WAECT,KAAKE,UAAY,WAEjBF,KAAKN,KAAKiB,QAAQL,KAAK,SAASM,IAE5BZ,KAAKE,UAAY,YAEjBW,WAAW,WACP/B,OAAOgC,OAAO,WACVd,KAAKE,UAAY,MAGtB,SAMJ","file":"settings.min.js","sourcesContent":["angular.module('settings', ['ngResource','ngAnimate']);\n\nvar USER_ID = USER_ID || '';\n\nangular.module('settings').constant('USER_ID', USER_ID );","angular.module('settings').directive('myValidation', function() {\n\n    return {\n\n        link: function(scope, iElement, iAttrs, controller) {\n            var floatRegex = /^\\d?\\.?\\d+$/;\n            var passwordRegex = /^(?!([a-zA-Z]+|\\d+)$)[\\S]{8,}$/;\n\n            var target = iAttrs.targetId;\n            var type = iAttrs.targetType;\n\n            scope.isLegal = true;\n\n            scope.$watch('targetValue', function(value, oldValue) {\n\n                switch (type) {\n\n                    case 'float':\n                        scope.isLegal = floatRegex.test(value);\n                        break;\n                    case 'password':\n                        scope.isLegal = value == '' ? true : passwordRegex.test(value);\n                        break;\n                    case 'password-confirm':\n                        scope.isLegal = value == '' ? true : value == scope.comparingValue;\n                        break;\n\n                }\n\n                scope.onValidate({targetName: scope.targetName, targetValue:scope.targetValue,isLegal:scope.isLegal})\n\n\n            });\n\n        },\n\n        controller: function($scope, $element, $attrs, $transclude) {\n\n\n        },\n        scope: {\n            targetName:'@',\n            targetType: '@',\n            targetValue: '@',\n            comparingValue: '@?',\n            onValidate:'&'\n        },\n        transclude: true,\n        templateUrl: \"/js/settings/validation.template.html\"\n    }\n});\n\nangular.module('settings').service('userService', function($resource) {\n    this.findUser = function(id) {\n        var User = $resource('http://127.0.0.1:3000/user/:_id');\n        var user = User.get({ _id: id });\n        return user.$promise;\n    }\n\n});\n\n\nangular.module('settings').component('settings', {\n    templateUrl: '/js/settings/settings.template.html',\n    controller: ['$scope', 'userService', 'USER_ID', function($scope, userService, id) {\n        var self = this;\n\n\n        self.passwordConfirmation = '';\n\n        self.myClasses = '';\n\n        var verifiedRS={};\n        self.validate=function(name, value, isLegal){\n\n            verifiedRS[name]=isLegal;\n\n        };\n\n        userService.findUser(id).then(function(user) {\n            self.user = user;\n            self.user.password = '';\n        });\n\n\n        self.saveUser = function() {\n\n            var isReady =true;\n\n            for(let prop in verifiedRS){\n                if(!verifiedRS[prop]){\n                    isReady=false;\n                    break;\n                }\n            }\n\n            if(isReady){\n\n                self.myClasses = 'isActive';\n\n                self.user.$save().then(function(rs) {\n\n                    self.myClasses = 'isSuccess';\n\n                    setTimeout(function() {\n                        $scope.$apply(function() {\n                            self.myClasses = '';\n                        });\n\n                    }, 900)\n\n                });\n\n            }\n\n            return false;\n        }\n\n    }]\n});\n\n"]}