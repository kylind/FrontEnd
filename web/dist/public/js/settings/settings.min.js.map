{"version":3,"sources":["public/js/settings/settings.module.js","public/js/settings/settings.component.js"],"names":["define","angular","$","module","userId","USER_ID","constant","directive","link","scope","iElement","iAttrs","controller","floatRegex","passwordRegex","type","targetId","targetType","isLegal","$watch","value","oldValue","test","comparingValue","onValidate","targetName","targetValue","$scope","$element","$attrs","$transclude","transclude","templateUrl","service","$resource","User","this","findUser","id","user","get","_id","$promise","saveUser","save","component","self","newTag","addTag","Array","isArray","tags","unshift","onUpdate","removeTag","tag","removeIndex","indexOf","splice","bindings","userService","passwordConfirmation","myClasses","verifiedRS","validate","name","then","password","isReady","prop","$save","rs","fn","setTags","setTimeout","$apply"],"mappings":"AAAA,YCAAA,SAAQ,UAAU,SAAU,YAAa,cAAe,SAASC,QAAQC,GAErED,QAAQE,OAAO,YAAa,aAAc,aAE1C,IAAIC,QAASC,SAAW,EAExBJ,SAAQE,OAAO,YAAYG,SAAS,UAAWF,QAE/CH,QAAQE,OAAO,YAAYI,UAAU,eAAgB,WAEjD,OAEIC,KAAM,SAASC,MAAOC,SAAUC,OAAQC,YACpC,GAAIC,YAAa,cACbC,cAAgB,iCAGhBC,MADSJ,OAAOK,SACTL,OAAOM,WAElBR,OAAMS,SAAU,EAEhBT,MAAMU,OAAO,cAAe,SAASC,MAAOC,UAExC,OAAQN,MAEJ,IAAK,QACDN,MAAMS,QAAUL,WAAWS,KAAKF,MAChC,MACJ,KAAK,WACDX,MAAMS,QAAmB,IAATE,OAAqBN,cAAcQ,KAAKF,MACxD,MACJ,KAAK,mBACDX,MAAMS,QAAmB,IAATE,OAAqBA,OAASX,MAAMc,eAK5Dd,MAAMe,YAAaC,WAAYhB,MAAMgB,WAAYC,YAAajB,MAAMiB,YAAaR,QAAST,MAAMS,aAOxGN,WAAY,SAASe,OAAQC,SAAUC,OAAQC,eAI/CrB,OACIgB,WAAY,IACZR,WAAY,IACZS,YAAa,IACbH,eAAgB,KAChBC,WAAY,KAEhBO,YAAY,EACZC,YAAa,2CAIrB/B,QAAQE,OAAO,YAAY8B,QAAQ,cAAe,SAASC,WACvD,GAAIC,MAAOD,UAAU,aACrBE,MAAKC,SAAW,SAASC,IACrB,GAAIC,MAAOJ,KAAKK,KAAMC,IAAKH,IAC3B,OAAOC,MAAKG,UAGhBN,KAAKO,SAAW,SAASJ,MACrBJ,KAAKS,KAAKL,SAKlBtC,QAAQE,OAAO,YAAY0C,UAAU,UACjCb,YAAa,oCACbpB,YAAa,SAAU,SAASe,QAC5B,GAAImB,MAAOV,IAEXU,MAAKC,OAAS,GAEdD,KAAKE,OAAS,WACS,IAAfF,KAAKC,SACDE,MAAMC,QAAQJ,KAAKK,MACnBL,KAAKK,KAAKC,QAAQN,KAAKC,QAEvBD,KAAKK,MAAQL,KAAKC,SAI1BD,KAAKC,OAAS,GAEdD,KAAKO,UAAWF,KAAML,KAAKK,QAG/BL,KAAKQ,UAAY,SAASC,KAEtB,GAAIC,aAAcV,KAAKK,KAAKM,QAAQF,IAEhCC,aAAc,GACdV,KAAKK,KAAKO,OAAOF,YAAa,GAGlCV,KAAKO,UAAWF,KAAML,KAAKK,UAInCQ,UACIR,KAAM,QACNE,SAAU,KAEdtB,YAAY,IAIhB9B,QAAQE,OAAO,YAAY0C,UAAU,YACjCb,YAAa,sCACbpB,YAAa,SAAU,cAAe,UAAW,SAASe,OAAQiC,YAAatB,IAC3E,GAAIQ,MAAOV,IAGXU,MAAKe,qBAAuB,GAE5Bf,KAAKgB,UAAY,EAEjB,IAAIC,cACJjB,MAAKkB,SAAW,SAASC,KAAM7C,MAAOF,SAElC6C,WAAWE,MAAQ/C,SAIvB0C,YAAYvB,SAASC,IAAI4B,KAAK,SAAS3B,MACnCO,KAAKP,KAAOA,KACZO,KAAKP,KAAK4B,SAAW,GACrBrB,KAAKP,KAAKY,KAAOL,KAAKP,KAAKY,KAAOL,KAAKP,KAAKY,UAIhDL,KAAKH,SAAW,WAEZ,GAAIyB,UAAU,CAEd,KAAK,GAAIC,QAAQN,YACb,IAAKA,WAAWM,MAAO,CACnBD,SAAU,CACV,OA2BR,MAvBIA,WAEAtB,KAAKgB,UAAY,WAEjBhB,KAAKP,KAAK+B,QAAQJ,KAAK,SAASK,IAE5BzB,KAAKgB,UAAY,YAEjB5D,EAAEsE,GAAGjB,IAAIkB,QAAQ3B,KAAKP,KAAKY,MAE3BuB,WAAW,WACP/C,OAAOgD,OAAO,WACV7B,KAAKgB,UAAY,MAGtB,SAQJ","file":"settings.min.js","sourcesContent":["\n\n\n\n","define(['angular','jquery', 'ngAnimate', 'ngResource'], function(angular,$) {\n\n    angular.module('settings', ['ngResource', 'ngAnimate']);\n\n    var userId = USER_ID || '';\n\n    angular.module('settings').constant('USER_ID', userId);\n\n    angular.module('settings').directive('myValidation', function() {\n\n        return {\n\n            link: function(scope, iElement, iAttrs, controller) {\n                var floatRegex = /^\\d?\\.?\\d+$/;\n                var passwordRegex = /^(?!([a-zA-Z]+|\\d+)$)[\\S]{8,}$/;\n\n                var target = iAttrs.targetId;\n                var type = iAttrs.targetType;\n\n                scope.isLegal = true;\n\n                scope.$watch('targetValue', function(value, oldValue) {\n\n                    switch (type) {\n\n                        case 'float':\n                            scope.isLegal = floatRegex.test(value);\n                            break;\n                        case 'password':\n                            scope.isLegal = value == '' ? true : passwordRegex.test(value);\n                            break;\n                        case 'password-confirm':\n                            scope.isLegal = value == '' ? true : value == scope.comparingValue;\n                            break;\n\n                    }\n\n                    scope.onValidate({ targetName: scope.targetName, targetValue: scope.targetValue, isLegal: scope.isLegal })\n\n\n                });\n\n            },\n\n            controller: function($scope, $element, $attrs, $transclude) {\n\n\n            },\n            scope: {\n                targetName: '@',\n                targetType: '@',\n                targetValue: '@',\n                comparingValue: '@?',\n                onValidate: '&'\n            },\n            transclude: true,\n            templateUrl: \"/js/settings/validation.template.html\"\n        }\n    });\n\n    angular.module('settings').service('userService', function($resource) {\n        var User = $resource('/user/:_id');\n        this.findUser = function(id) {\n            var user = User.get({ _id: id });\n            return user.$promise;\n        };\n\n        this.saveUser = function(user) {\n            User.save(user);\n        }\n\n    });\n\n    angular.module('settings').component('tagmgr', {\n        templateUrl: '/js/settings/tagmgr.template.html',\n        controller: ['$scope', function($scope) {\n            var self = this;\n\n            self.newTag = '';\n\n            self.addTag = function() {\n                if (self.newTag != '') {\n                    if (Array.isArray(self.tags)) {\n                        self.tags.unshift(self.newTag);\n                    } else {\n                        self.tags = [self.newTag];\n                    }\n                }\n\n                self.newTag = '';\n\n                self.onUpdate({ tags: self.tags });\n\n            };\n            self.removeTag = function(tag) {\n\n                var removeIndex = self.tags.indexOf(tag);\n\n                if (removeIndex > 0) {\n                    self.tags.splice(removeIndex, 1);\n                }\n\n                self.onUpdate({ tags: self.tags });\n\n            };\n        }],\n        bindings: {\n            tags: \"<tags\",\n            onUpdate: \"&\"\n        },\n        transclude: true\n    });\n\n\n    angular.module('settings').component('settings', {\n        templateUrl: '/js/settings/settings.template.html',\n        controller: ['$scope', 'userService', 'USER_ID', function($scope, userService, id) {\n            var self = this;\n\n\n            self.passwordConfirmation = '';\n\n            self.myClasses = '';\n\n            var verifiedRS = {};\n            self.validate = function(name, value, isLegal) {\n\n                verifiedRS[name] = isLegal;\n\n            };\n\n            userService.findUser(id).then(function(user) {\n                self.user = user;\n                self.user.password = '';\n                self.user.tags = self.user.tags ? self.user.tags : [];\n            });\n\n\n            self.saveUser = function() {\n\n                var isReady = true;\n\n                for (let prop in verifiedRS) {\n                    if (!verifiedRS[prop]) {\n                        isReady = false;\n                        break;\n                    }\n                }\n\n                if (isReady) {\n\n                    self.myClasses = 'isActive';\n\n                    self.user.$save().then(function(rs) {\n\n                        self.myClasses = 'isSuccess';\n\n                        $.fn.tag.setTags(self.user.tags);\n\n                        setTimeout(function() {\n                            $scope.$apply(function() {\n                                self.myClasses = '';\n                            });\n\n                        }, 900)\n\n                    });\n\n\n\n                }\n\n                return false;\n            }\n\n        }]\n    });\n\n});\n"]}