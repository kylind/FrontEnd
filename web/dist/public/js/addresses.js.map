{"version":3,"sources":["public/js/addresses.js"],"names":["define","$","ko","mapping","AddressModel","address","self","_id","observable","client","recipient","phone","isSend","AddressesModel","addresses","swiper","init","observableAddresses","forEach","push","observableArray","setAddresses","addAddress","unshift","update","removeAddress","arguments","succeed","id","remove","ajax","success","data","status","dataType","type","submitAddress","console","log","addressData","toJS","post","fromJS"],"mappings":"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","file":"addresses.js","sourcesContent":["define(['jquery', 'knockout', 'knockout.mapping'], function($, ko, mapping) {\n\n    ko.mapping = mapping;\n\n    var AddressModel = function(address) {\n        var self = this;\n        self._id = ko.observable(address ? address._id : '');\n        self.client = ko.observable(address ? address.client : '');\n        self.recipient = ko.observable(address ? address.recipient : '');\n        self.address = ko.observable(address ? address.address : '');\n        self.phone = ko.observable(address ? address.phone : '');\n        self.isSend = ko.observable(address ? address.isSend : '');\n\n\n        /*this.isChanged = ko.pureComputed(function() {\n\n            return address && address.client == self.client() && address.recipient == self.recipient() && address.address == self.address() && address.phone == self.phone() ? false : true;\n\n        }, this);*/\n    };\n\n    var AddressesModel = function(addresses, swiper) {\n\n        function init(addresses) {\n            var observableAddresses = [];\n\n            addresses.forEach(function(address) {\n\n                observableAddresses.push(new AddressModel(address));\n\n            })\n            return observableAddresses;\n\n        }\n\n\n\n        var self = this;\n\n        var observableAddresses = init(addresses);\n\n        self.addresses = ko.observableArray(observableAddresses);\n\n        self.setAddresses = function(addresses) {\n            self.addresses(init(addresses));\n\n        }\n\n\n        self.addAddress = function() {\n\n            self.addresses.unshift(new AddressModel());\n            swiper.update();\n        };\n\n        self.removeAddress = function(address) {\n            arguments[3]();\n            var succeed = arguments[4];\n            var id = address._id();\n            self.addresses.remove(address);\n\n            if (id == '') {\n                swiper.update();\n                succeed();\n                return;\n            }\n\n\n\n            $.ajax('./address/' + id, {\n                success: function(data, status) {\n                    succeed();\n                },\n                dataType: 'json',\n                type: 'DELETE'\n\n            });\n\n            swiper.update();\n\n        };\n\n        self.submitAddress = function(address) {\n            arguments[3]();\n            var succeed = arguments[4];\n\n            console.log('post request....');\n\n            var addressData = ko.mapping.toJS(address); //$.parseJSON(ko.toJSON(address));\n\n            $.post('/address', addressData, function(data, status) {\n\n                    console.log('get post result');\n                    ko.mapping.fromJS(data, {}, address);\n                    swiper.update();\n                    succeed();\n                },\n                'json'\n            );\n\n            return false;\n\n        };\n    };\n\n\n\n\n    return AddressesModel;\n\n})\n"]}