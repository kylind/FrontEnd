{"version":3,"sources":["public/js/reckoning-orders.js"],"names":["define","$","ko","mapping","Item","item","self","name","observable","quantity","buyPrice","isNaN","sellPrice","profit","note","isDone","historicTrades","observableArray","isHistoricTradesOpen","isChanged","subscribe","newValue","newVal","OrderModel","order","swiper","_id","client","postage","observableItems","isArray","items","length","forEach","push","i","createDate","displayDate","rate","isComplete","formatPrice","price","purePrice","toFixed","total","pureComputed","parseFloat","dateFormatting","month","day","weekday","status","packingStatus","orderStatus","getHistoricTrades","parent","event","itemData","toJS","$historicTrades","target","closest","find","succeed","arguments","getJSON","res","slideDown","update","slideUp","hasHistoricTrades","addItem","unshift","removeItem","remove","addAddress","address","addresses","recipient","phone","getAddresses","removedAddresses","removeAddress","submitAddresses","addressesData","post","markDone","id","newStatus","ajax","success","data","addExistingOrder","dataType","type","submitOrder","orderData","parseJSON","toJSON","console","log","fromJS","OrdersModel","orders","getObservableOrders","observableOrders","toggleClientView","toggleClass","$orders","hasClass","addClass","removeClass","submitOrders","ordersData","Array","changedIndexs","changedOrders","filter","index","rs","newOrder","orderIndex","create","option","addOrder","window","scrollTop","existingOrder","ele","removeDoneOrder","doneOrder","newOrders","removeOrder","searchOrders","keywords","val","regex","matchedRes","match","searchCurrentOrders","searchGlobalOrders","newKeywords","setTimeout","searchedOrders","indexOf","timeoutIds","clearTimeout"],"mappings":"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","file":"reckoning-orders.js","sourcesContent":["define(['jquery', 'knockout', 'knockout.mapping'], function($, ko, mapping) {\n\n    ko.mapping = mapping;\n\n    var Item = function(item) {\n        var self = this;\n\n\n        self.name = ko.observable(item && item.name ? item.name : '');\n        self.quantity = ko.observable(item && item.quantity ? item.quantity : '1');\n        self.buyPrice = ko.observable(item && !isNaN(item.buyPrice) ? item.buyPrice : '');\n        self.sellPrice = ko.observable(item && !isNaN(item.sellPrice) ? item.sellPrice : '');\n        self.profit = item && item.profit ? item.profit : '';\n        self.note = item && item.note ? item.note : '';\n        self.isDone = item && item.isDone ? item.isDone : false;\n        self.historicTrades = ko.observableArray([]);\n\n        self.isHistoricTradesOpen = false;\n\n        self.isChanged = false;\n\n        self.name.subscribe(function(newValue) {\n            self.isChanged = true;\n        })\n        self.quantity.subscribe(function(newValue) {\n            self.isChanged = true;\n        })\n        self.buyPrice.subscribe(function(newVal) {\n            self.isChanged = true;\n        })\n        self.sellPrice.subscribe(function(newVal) {\n            self.isChanged = true;\n        })\n\n    }\n\n    var OrderModel = function(order, swiper) {\n        var self = this;\n\n        self._id = ko.observable(order ? order._id : '');\n        self.client = ko.observable(order ? order.client : '');\n        self.postage = ko.observable(order && order.postage ? order.postage : 0);\n\n\n        var observableItems = [];\n\n        if (order && $.isArray(order.items) && order.items.length > 0) {\n            order.items.forEach(function(item) {\n                observableItems.push(new Item(item));\n            });\n\n        } else {\n            for (var i = 0; i < 3; i++) {\n                observableItems.push(new Item());\n            }\n\n        }\n\n        self.isChanged = false;\n\n        self.items = ko.observableArray(observableItems);\n\n        self.items.subscribe(function(newValue) {\n            self.isChanged = true;\n\n\n        })\n        self.client.subscribe(function(newValue) {\n\n            self.isChanged = true;\n\n        })\n        self.postage.subscribe(function(newValue) {\n            self.isChanged = true;\n\n\n        })\n\n\n\n        self.createDate = ko.observable(order ? order.createDate : '');\n        self.displayDate = ko.observable(order ? order.displayDate : '');\n\n\n\n\n        self.rate = order ? order.rate : '';\n\n        self.buyPrice = ko.observable(order && order.buyPrice ? order.buyPrice : '');\n        self.sellPrice = ko.observable(order && order.sellPrice ? order.sellPrice : '');\n        self.profit = ko.observable(order && order.profit ? order.profit : '');\n        self.isComplete = ko.observable(order && order.isComplete ? order.isComplete : false);\n\n        self.formatPrice = function(price) {\n\n            if (!price) return '?';\n\n            var purePrice = price();\n            if (purePrice) {\n                return (+purePrice).toFixed(1);\n            } else {\n                return '?'\n            }\n        }\n\n\n        self.total = ko.pureComputed(function() {\n            var sellPrice = parseFloat(this.sellPrice());\n            var postage = parseFloat(this.postage());\n            if (isNaN(sellPrice) || isNaN(postage)) {\n                return '?';\n            } else {\n                return (sellPrice + postage).toFixed(1);\n            }\n        }, self);\n\n\n        var dateFormatting = {\n            month: \"2-digit\",\n            day: \"numeric\",\n            weekday: \"short\"\n        };\n\n\n        /*self.displayDate = function() {\n\n            var createDate = self.createDate()\n\n            return createDate ? new Date(createDate).toLocaleDateString(\"en-US\", dateFormatting) : '';\n\n        };*/\n\n        self.status = ko.observable(order ? order.status : '1RECEIVED');\n\n        self.packingStatus = order ? order.packingStatus : '1ISREADY';\n\n        self.orderStatus = ko.pureComputed(function() {\n            if (self.status() == '3DONE') {\n                return 'font-green';\n            } else if (self.status() == '2SENT') {\n                return 'font-yellow';\n            }\n        });\n\n        self.getHistoricTrades = function(item, parent, event) {\n\n            var itemData = ko.mapping.toJS(item);\n\n            var $historicTrades = $(event.target).closest('.item').find('.historicbox');\n\n            if (!item.isHistoricTradesOpen) {\n\n                var succeed = arguments[4]\n\n                if (itemData.name == '') return;\n\n                arguments[3]();\n\n                $.getJSON('./historictrades', { 'itemName': itemData.name }, function(res, status) {\n\n                    status == 'success' ? item.historicTrades(res) : item.historicTrades([]);\n\n\n                    $historicTrades.slideDown('fast', function() {\n                        item.isHistoricTradesOpen = true;\n\n                        succeed();\n                        swiper.update();\n                    });\n\n                });\n\n            } else {\n\n                $historicTrades.slideUp('fast', function() {\n                    item.isHistoricTradesOpen = false;\n                    swiper.update();\n                });\n            }\n        };\n\n        self.hasHistoricTrades = function(item) {\n\n            return item.historicTrades().length > 0 ? true : false;\n\n        };\n\n        self.addItem = function() {\n\n            self.items.unshift(new Item());\n            swiper.update();\n        };\n\n        self.removeItem = function(item) {\n            self.items.remove(item);\n            swiper.update();\n        };\n\n\n\n        self.addAddress = function(address) {\n\n            self.addresses.unshift({\n                _id: \"\",\n                client: self.client(),\n                recipient: \"\",\n                address: \"\",\n                phone: \"\"\n            });\n            swiper.update();\n\n        };\n\n        self.getAddresses = function(order) {\n            arguments[3]();\n            var succeed = arguments[4];\n\n            var client = order.client();\n\n            if (client == '') return;\n\n            $.getJSON('./addressesByClient', {\n                client: client\n            }, function(res, status) {\n\n                status == 'success' ? order.addresses(res) : order.addresses([]);\n                swiper.update();\n                succeed();\n\n            });\n\n\n        };\n\n        var removedAddresses = [];\n\n        self.removeAddress = function(address) {\n\n            if (address._id != '') {\n\n                removedAddresses.push(address._id);\n\n            }\n\n            self.addresses.remove(address);\n            swiper.update();\n\n\n        };\n\n        self.submitAddresses = function(order) {\n            arguments[3]();\n            var succeed = arguments[4];\n\n            var addressesData = ko.mapping.toJS(order.addresses);\n\n\n            $.post('./addresses', {\n                    \"client\": order.client,\n                    \"addresses\": addressesData\n                }, function(addresses, status) {\n\n                    order.addresses(addresses);\n                    swiper.update();\n                    succeed();\n                },\n                'json'\n            );\n\n            return false;\n\n        };\n\n        self.markDone = function() {\n            arguments[3]();\n            var succeed = arguments[4];\n            var parent = arguments[1];\n            var id = self._id();\n\n            var orderStatus = self.status();\n\n            var newStatus = '1RECEIVED';\n\n            if (orderStatus == '1RECEIVED') {\n                newStatus = '2SENT'\n\n            } else if (orderStatus == '2SENT') {\n                newStatus = '3DONE'\n\n            }\n\n            $.ajax('./orderStatus/' + id, {\n                success: function(data, status) {\n\n                    self.status(newStatus)\n                    if (newStatus == '3DONE') {\n                        //parent.removeDoneOrder(self)\n                    } else if (orderStatus == '3DONE') {\n                        parent.addExistingOrder(self)\n\n                    }\n                    succeed();\n                    swiper.update();\n\n                },\n                data: {\n                    'status': newStatus\n                },\n                dataType: 'json',\n                type: 'PUT'\n\n            });\n\n        }\n\n        self.submitOrder = function(order) {\n            arguments[3]();\n            var succeed = arguments[4];\n\n            var orderData = $.parseJSON(ko.toJSON(order));\n\n            $.post('./order', orderData, function(data, status) {\n\n                    data.items.forEach(function(item) {\n\n                        item.historicTrades = [];\n\n                    });\n\n                    console.log('get post result');\n                    ko.mapping.fromJS(data, {}, order);\n\n\n                },\n                'json'\n            );\n\n            return false;\n\n        };\n\n\n    };\n\n\n\n    var OrdersModel = function(orders, swiper) {\n\n\n        var self = this;\n\n\n        self.getObservableOrders = function(orders) {\n            var observableOrders = [];\n\n            orders.forEach(function(order) {\n\n                observableOrders.push(new OrderModel(order, swiper));\n\n            })\n            return observableOrders;\n\n        };\n\n        var observableOrders = self.getObservableOrders(orders);\n\n        self.orders = ko.observableArray(observableOrders);\n\n        self.toggleClientView = function(data, parent, event) {\n\n            $(event.target).toggleClass('icon-eyeslash');\n\n\n            var $orders = $('.orders--reckoning');\n\n            if ($(event.target).hasClass('icon-eyeslash')) {\n                $orders.addClass(\"isClientView\");\n\n            } else {\n                $orders.removeClass(\"isClientView\");\n            }\n\n            swiper.update();\n\n\n        };\n\n\n\n        self.submitOrders = function() {\n            arguments[3]();\n            var succeed = arguments[4];\n\n            var orders = self.orders();\n            var ordersData = $.parseJSON(ko.toJSON(orders)); //$.parseJSON(ko.toJSON(order));\n\n            if (Array.isArray(ordersData) && ordersData.length > 0) {\n\n                var changedIndexs = [];\n\n                var changedOrders = ordersData.filter(function(order, index) {\n\n                    var isChanged = false;\n\n                    if (order.isChanged) {\n                        isChanged = true;\n                    } else {\n                        for (var i = 0; i < order.items.length; i++) {\n                            if (order.items[i].isChanged) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (isChanged) {\n                        changedIndexs.push(index);\n                    }\n\n                    return isChanged;\n\n                })\n\n                if (changedOrders.length > 0) {\n                    $.post('/orders', { orders: changedOrders }, function(rs, status) {\n\n                            rs.forEach(function(newOrder, index) {\n                                var orderIndex = changedIndexs[index];\n\n                                if($.isArray(newOrder.items) && newOrder.items.length==0){\n                                    newOrder.items=[{},{},{}];\n                                }\n\n                                newOrder.items.forEach(function(item) {\n                                    item.historicTrades = [];\n                                });\n\n                                ko.mapping.fromJS(newOrder, {\n                                    items: {\n                                        create: function(option) {\n                                            return new Item(option.data);\n\n                                        }\n                                    }\n                                }, orders[orderIndex]);\n\n                                orders[orderIndex].isChanged=false;\n                                // orders[orderIndex].items().forEach(function(item){\n                                //     item.isChanged=false;\n\n                                // })\n\n                            })\n\n                            succeed();\n\n                        },\n                        'json'\n                    );\n                } else {\n                    succeed();\n                }\n\n\n            }\n\n\n            return false;\n\n        };\n\n        self.addOrder = function() {\n\n            var order = new OrderModel(null, swiper);\n\n            self.orders.unshift(order);\n            swiper.update();\n            $(window).scrollTop(0);\n        };\n        self.addExistingOrder = function(order) {\n            if (orders != null) {\n\n                var existingOrder = orders.find(function(ele) {\n                    return ele._id == order._id;\n                });\n\n                if (!existingOrder) {\n                    orders.unshift(order);\n                }\n\n            }\n            //self.orders.push(order);\n\n        };\n        self.removeDoneOrder = function(doneOrder) {\n\n            var id = doneOrder._id();\n\n            if (orders != null) {\n\n                var newOrders = orders.filter(function(order) {\n\n                    return order._id() != id;\n\n                });\n\n                orders = newOrders;\n\n            }\n\n            self.orders.remove(doneOrder);\n\n\n        };\n        self.removeOrder = function(order) {\n\n            arguments[3]();\n            var succeed = arguments[4];\n\n            var id = order._id();\n            self.orders.remove(order);\n\n            if (id == '') {\n\n                succeed();\n                swiper.update();\n                return;\n            }\n\n\n\n            $.ajax('./order/' + id, {\n                success: function(data, status) {\n\n                    succeed();\n\n                },\n                dataType: 'json',\n                type: 'DELETE'\n\n            });\n            swiper.update();\n\n        };\n\n\n\n        var orders = null;\n        self.searchOrders = function(data, event) {\n            if (orders == null) {\n                orders = self.orders();\n            }\n\n            var keywords = $(event.target).val();\n\n            var regex = /(\\s*)([\\u4E00-\\u9FA5\\uF900-\\uFA2D\\w]+[\\u4E00-\\u9FA5\\uF900-\\uFA2D\\w ]*)/;\n\n\n            var matchedRes = keywords.match(regex);\n\n            if (matchedRes != null) {\n\n                if (matchedRes[1] == \"\") {\n                    searchCurrentOrders(matchedRes[2])\n\n                } else {\n                    searchGlobalOrders(matchedRes[2])\n                }\n\n            } else if (orders != null) {\n\n                newKeywords = '';\n\n                self.orders(orders);\n                setTimeout(function() {\n                    swiper.update();\n                }, 100)\n            }\n\n        }\n\n        function searchCurrentOrders(keywords) {\n\n\n            var searchedOrders = orders.filter(function(order) {\n\n                return order.client().indexOf(keywords) >= 0;\n            });\n\n            self.orders(searchedOrders);\n            setTimeout(function() {\n                swiper.update();\n            }, 100)\n        }\n\n        var timeoutIds = [];\n\n        var newKeywords = '';\n\n        function searchGlobalOrders(keywords) {\n\n            newKeywords = keywords;\n\n            var id = setTimeout(function() {\n\n\n                for (var i = 1; i < timeoutIds.length; i++) {\n                    clearTimeout(timeoutIds[i]);\n                }\n\n                timeoutIds = [];\n\n                if (newKeywords != '') {\n\n                    $.ajax('./ordersByName', {\n                        data: {\n                            client: newKeywords\n                        },\n                        type: 'GET',\n                        success: function(data, status) {\n\n                            self.orders(self.getObservableOrders(data));\n                            setTimeout(function() {\n                                swiper.update();\n                            }, 100);\n\n                        },\n\n                        dataType: 'json'\n\n                    });\n\n\n\n                }\n\n                console.log('i am searching ' + newKeywords);\n\n            }, 1000);\n\n            timeoutIds.push(id);\n\n\n        }\n\n\n    };\n\n    return OrdersModel;\n\n\n})\n"]}